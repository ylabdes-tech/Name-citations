name: Build Android APK
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: /home/runner/android-sdk
      ANDROID_SDK_ROOT: /home/runner/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      LD_LIBRARY_PATH: /usr/lib/jvm/java-8-openjdk-amd64/lib/server:/usr/lib
      CFLAGS: -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux
      LDFLAGS: -L/usr/lib/jvm/java-8-openjdk-amd64/lib/server -ljvm
      PATH: /bin:/usr/bin:/usr/local/bin:/home/runner/.local/bin:$PATH:/home/runner/android-sdk/cmdline-tools/latest/bin:/home/runner/android-sdk/platform-tools:/home/runner/android-sdk/build-tools/30.0.3
    steps:
      - name: Clean apt locks
        run: |
          echo "Cleaning apt locks..."
          sudo rm -f /var/lib/apt/lists/lock
          sudo rm -f /var/cache/apt/*.bin
          sudo rm -rf /var/lib/apt/lists/*
      - name: Add deadsnakes PPA for python3.9 and python3.8
        run: |
          echo "Adding deadsnakes PPA..."
          for i in {1..10}; do
            sudo apt-get update && \
            sudo apt-get install -y software-properties-common && \
            sudo add-apt-repository ppa:deadsnakes/ppa -y && \
            sudo apt-get update && break || \
            echo "PPA setup attempt $i failed, retrying..."; sleep 20
          done
      - name: Install system dependencies
        run: |
          echo "Installing system dependencies..."
          sudo apt-get install -y git tar build-essential python3-dev python3.9 python3.9-dev python3.9-venv python3.9-distutils python3.8 python3.8-dev python3.8-venv python3.8-distutils python3-pip ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev openjdk-8-jdk openjdk-8-jre openjdk-8-jdk-headless libopenjdk8-jni unzip zlib1g-dev libffi-dev libffi8 libssl-dev gcc g++ libc6-dev libstdc++6 libjpeg-dev libpng-dev
          echo "Verifying Python 3.9 installation:"
          python3.9 --version || { echo "Python 3.9 installation failed"; exit 1; }
          echo "Verifying Python 3.8 installation:"
          python3.8 --version || { echo "Python 3.8 installation failed"; exit 1; }
          echo "Checking JNI libraries:"
          find /usr/lib/jvm/java-8-openjdk-amd64 -name 'libjvm.so' || { echo "libjvm.so not found"; exit 1; }
          find /usr/lib -name 'libffi.so' || { echo "libffi.so not found"; exit 1; }
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Create and activate virtual environment for Python 3.9
        run: |
          echo "Creating virtual environment for Python 3.9..."
          python3.9 -m venv /home/runner/venv
          source /home/runner/venv/bin/activate
          echo "Upgrading pip in virtual environment..."
          python -m pip install --upgrade pip
      - name: Install Python dependencies
        run: |
          source /home/runner/venv/bin/activate
          echo "Installing base Python dependencies..."
          python -m pip install cython==0.29.36 buildozer kivy==2.2.1 plyer --no-cache-dir --verbose > pip_base_install.log 2>&1
          echo "Installing pyjnius from PyPI (1.4.0)..."
          python -m pip install pyjnius==1.4.0 --no-binary pyjnius --no-cache-dir --verbose > pip_pyjnius_install.log 2>&1 || echo "PyPI install failed"
          echo "Listing installed Python packages:"
          python -m pip list
          echo "Checking Python dependencies:"
          python -c "import kivy; print('Kivy version:', kivy.__version__)" || { echo "Kivy import failed"; exit 1; }
          python -c "import pyjnius; print('Pyjnius version:', pyjnius.__version__)" || { echo "Pyjnius import failed"; exit 1; }
      - name: Fallback to Python 3.8 if Python 3.9 fails
        if: failure()
        run: |
          echo "Python 3.9 failed, trying Python 3.8..."
          python3.8 -m venv /home/runner/venv3.8
          source /home/runner/venv3.8/bin/activate
          python -m pip install --upgrade pip
          python -m pip install cython==0.29.36 buildozer kivy==2.2.1 plyer pyjnius==1.4.0 --no-cache-dir --verbose
      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "build-tools;30.0.3" "platforms;android-30" "platform-tools"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
      - name: Build APK
        run: |
          source /home/runner/venv/bin/activate
          buildozer android debug
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
